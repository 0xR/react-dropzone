{
  "name": "react-dropzone",
  "tagline": "Simple HTML5 drag-drop zone in React.js.",
  "body": "\r\n[![Screenshot of Dropzone](https://raw.githubusercontent.com/paramaggarwal/react-dropzone/master/screenshot.png)](http://paramaggarwal.github.io/react-dropzone/)\r\n\r\nDemo: http://paramaggarwal.github.io/react-dropzone/\r\n\r\nInstallation\r\n------------\r\n\r\nThe easiest way to use react-dropzone is to install it from npm and include it in your React build process (using [Webpack](http://webpack.github.io/), [Browserify](http://browserify.org/), etc).\r\n\r\n```\r\nnpm install --save react-dropzone\r\n```\r\n\r\nUsage\r\n-----\r\n\r\nSimply `require('react-dropzone')` and specify an `onDrop` method that accepts an array of dropped files. \r\n\r\nYou can customize `<Dropzone>` by specifying children and passing a `style` or `className`. By default, the component picks up some default styling to get you started.\r\n\r\nExample\r\n-------\r\n\r\n```jsx\r\n\r\n/** @jsx React.DOM */\r\nvar React = require('react');\r\nvar Dropzone = require('react-dropzone');\r\n\r\nvar DropzoneDemo = React.createClass({\r\n    onDrop: function (files) {\r\n      console.log('Received files: ', files);\r\n    },\r\n\r\n    render: function () {\r\n      return (\r\n          <div>\r\n            <Dropzone onDrop={this.onDrop}>\r\n              <div>Try dropping some files here, or click to select files to upload.</div>\r\n            </Dropzone>\r\n          </div>\r\n      );\r\n    }\r\n});\r\n\r\nReact.render(<DropzoneDemo />, document.body);\r\n```\r\n\r\nFeatures\r\n--------\r\n\r\n- `supportClick` - Clicking the `<Dropzone>` brings up the browser file picker. To disable, set to `false`.\r\n- `multiple` - To accept only a single file, set this to `false`.\r\n- `accept` - The allowed file types can be controlled by the `accept` property, using the same syntax as the [HTML <input> accept Attribute](http://www.w3schools.com/tags/att_input_accept.asp).\r\n\r\nTo show a preview of the dropped file while it uploads, use the `file.preview` property. Use `<img src={file.preview} />` to display a preview of the image dropped.\r\n\r\nTo trigger the dropzone manually (open the file prompt), call the component's `open` function.\r\n\r\n```jsx\r\n/** @jsx React.DOM */\r\nvar React = require('react');\r\nvar Dropzone = require('react-dropzone');\r\n\r\nvar DropzoneDemo = React.createClass({\r\n    onDrop: function (files) {\r\n      this.setState({\r\n        files: files\r\n      });\r\n    },\r\n\r\n    onOpenClick: function () {\r\n      this.refs.dropzone.open();\r\n    },\r\n\r\n    render: function () {\r\n      return (\r\n          <div>\r\n            <Dropzone ref=\"dropzone\" onDrop={this.onDrop} >\r\n              <div>Try dropping some files here, or click to select files to upload.</div>\r\n            </Dropzone>\r\n            <button type=\"button\" onClick={this.onOpenClick}>\r\n                Open Dropzone\r\n            </button>\r\n            {this.state.files ? <div>\r\n            <h2>Uploading {files.length} files...</h2>\r\n            <div>this.state.files.map((file) => <img src={file.preview} />)</div>\r\n            </div> : null}\r\n          </div>\r\n      );\r\n    }\r\n});\r\n\r\nReact.render(<DropzoneDemo />, document.body);\r\n```\r\n\r\nUploads\r\n-------\r\n\r\nUsing `react-dropzone` is similar to using a file form field, but instead of getting the `files` property from the field, you listen to the `onDrop` callback to handle the files. Simple explanation here: http://abandon.ie/notebook/simple-file-uploads-using-jquery-ajax\r\n\r\nSpecifying the `onDrop` method, provides you with an array of [Files](https://developer.mozilla.org/en-US/docs/Web/API/File) which you can then send to a server. For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\r\n\r\n```javascript\r\n    onDrop: function(files){\r\n        var req = request.post('/upload');\r\n        files.forEach((file)=> {\r\n            req.attach(file.name, file);\r\n        });\r\n        req.end(callback);\r\n    }\r\n```\r\n\r\nLicense\r\n-------\r\n\r\nMIT\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}